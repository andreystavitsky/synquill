part of synquill_gen;

// ignore_for_file: deprecated_member_use, depend_on_referenced_packages

/// Generates the complete synced_storage.generated.dart file content
class FileAggregator {
  /// Generate the complete synced_storage.generated.dart file
  static String generateAggregateFile(List<ModelInfo> models) {
    final buffer = StringBuffer();

    // File header
    buffer.writeln('// GENERATED CODE - DO NOT MODIFY BY HAND');
    buffer.writeln('// Generated by synquill aggregate_builder');
    buffer.writeln();

    // Imports
    // only import synquill as it contains all necessary imports
    buffer.writeln('import \'package:synquill/synquill.dart\';');
    buffer.writeln('import \'package:synquill/synquill_core.dart\' show ');
    buffer.writeln('  DatabaseAccessor, GeneratedDatabase;');

    final aggregatedImports = <String>{};
    for (final model in models) {
      final relativePath = BuilderUtils.makeRelativePath(model.importPath);
      aggregatedImports.add(relativePath);
    }
    for (final model in models) {
      if (model.adapters != null) {
        for (final adapter in model.adapters!) {
          // Use the import path from AdapterInfo
          final adapterPath = adapter.importPath;

          final relativePath = BuilderUtils.makeRelativePath(adapterPath);
          aggregatedImports.add(relativePath);
        }
      }
    }
    for (final aggregatedImport in aggregatedImports) {
      buffer.writeln('import \'$aggregatedImport\';');
    }

    // Add part directives for generated files
    buffer.writeln('import \'generated/database.generated.dart\';');
    buffer.writeln('export \'generated/database.generated.dart\';');
    buffer.writeln();
    buffer.writeln('part \'generated/repositories.g.dart\';');
    buffer.writeln('part \'generated/api_adapters.g.dart\';');
    buffer.writeln('part \'generated/model_extensions.g.dart\';');
    buffer.writeln();

    return buffer.toString();
  }

  /// Generate the database.generated.dart file with imports and part directives
  static String generateDatabaseFile(List<ModelInfo> models) {
    final buffer = StringBuffer();

    // File header
    buffer.writeln('// GENERATED CODE - DO NOT MODIFY BY HAND');
    buffer.writeln('// Generated by synquill aggregate_builder');
    buffer.writeln();

    // Imports
    // only import synquill as it contains all necessary imports
    buffer.writeln('import \'package:synquill/synquill_core.dart\';');
    // Import model files with relative paths (tables and DAOs are in
    // their .g.dart parts)
    final aggregatedImports = <String>{};
    for (final model in models) {
      final relativePath = BuilderUtils.makeRelativePath(model.importPath);
      aggregatedImports.add(relativePath);
    }

    // Add unique adapter imports
    for (final aggregatedImport in aggregatedImports) {
      buffer.writeln('import \'../$aggregatedImport\';');
    }
    buffer.writeln();

    // Add part directives for generated files
    buffer.writeln('part \'tables.g.dart\';');
    buffer.writeln('part \'dao.g.dart\';');
    buffer.writeln('part \'database.g.dart\';');
    buffer.writeln('part \'database.generated.g.dart\';');
    buffer.writeln();

    return buffer.toString();
  }
}
